{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Introduction","text":"<p>PHPPresentation is a library written in pure PHP that provides a set of classes to write to different presentation file formats, i.e. Microsoft Office Open XML (<code>.pptx</code>) and OASIS Open Document Format for Office Applications (<code>.odp</code>).</p> <p>PHPPresentation is an open source project licensed under the terms of LGPL version 3. PHPPresentation is aimed to be a high quality software product by incorporating continuous integration and unit testing. You can learn more about PHPPresentation by reading this Developers' Documentation.</p>"},{"location":"index.html#features","title":"Features","text":"<ul> <li>Create an in-memory presentation representation</li> <li>Set presentation meta data (author, title, description, etc)</li> <li>Add slides from scratch or from existing one</li> <li>Supports different fonts and font styles</li> <li>Supports different formatting, styles, fills, gradients</li> <li>Supports hyperlinks and rich-text strings</li> <li>Add images with different styles (positioning, rotation, shadow)</li> <li>Set printing options (header, footer, page margins, paper size, orientation)</li> <li>Input from different file formats:<ul> <li>PowerPoint 97 (.ppt)</li> <li>PowerPoint 2007 (.pptx)</li> <li>OpenDocument Presentation (.odp)</li> <li>Serialized Spreadsheet</li> </ul> </li> <li>Output to different file formats:<ul> <li>PowerPoint 2007 (.pptx)</li> <li>OpenDocument Presentation (.odp)</li> <li>Serialized Spreadsheet</li> </ul> </li> <li>... and lots of other things!</li> </ul>"},{"location":"index.html#file-formats","title":"File formats","text":"<p>Below are the supported features for each file formats.</p>"},{"location":"index.html#writers","title":"Writers","text":"Features HTML ODP PDF PPTX Document Mark as final Document Properties Standard Custom Slides Name Element Shape AutoShape Image Hyperlink Line MemoryImage RichText Table Text Charts Area Bar Bar3D Doughnut Line Pie Pie3D Radar Scatter"},{"location":"index.html#readers","title":"Readers","text":"Features ODP PPT PPTX Document Mark as final Document Properties Standard Custom Slides Name Element Shape AutoShape Image Hyperlink RichText Table Text Charts Area Bar Bar3D Doughnut Line Pie Pie3D Radar Scatter"},{"location":"index.html#contributing","title":"Contributing","text":"<p>We welcome everyone to contribute to PHPPresentation. Below are some of the things that you can do to contribute:</p> <ul> <li>Read our contributing guide</li> <li>Fork us and request a pull to the develop branch</li> <li>Submit bug reports or feature requests to GitHub</li> <li>Follow @PHPOffice on Twitter</li> </ul>"},{"location":"credits.html","title":"Credits","text":"<p>Images from chart page come from the LibreOffice Core.</p> <p>Some definitions come from the Office Open XML.</p>"},{"location":"credits.html#references","title":"References","text":""},{"location":"credits.html#openxml","title":"OpenXML","text":"<p>Known as \"ISO/IEC 29500, Third edition, 2012-09-01\"</p> <p>ISO :</p> <ul> <li>Part 1: Fundamentals and Markup Language Reference</li> <li>Part 2: Open Packaging Conventions</li> <li>Part 3: Markup Compatibility and Extensibility</li> <li>Part 4: Transitional Migration Features</li> </ul> <p>MSDN :</p> <ul> <li>PowerPoint Viewer</li> <li>DocumentFormat.OpenXml.Presentation Namespace on MSDN</li> <li>Open XML SDK 2.5 with Validator</li> </ul> <p>Library of Congress :</p> <ul> <li>OOXML Format Family -- ISO/IEC 29500 and ECMA 376</li> <li>Schemas in W3C XML Schema language and in RELAX NG for the Strict variant of PPTX, etc.</li> </ul>"},{"location":"credits.html#opendocument","title":"OpenDocument","text":"<ul> <li>Oasis OpenDocument Standard Version 1.2</li> <li>Schema Central Open Document 1.1</li> </ul>"},{"location":"credits.html#powerpoint-97","title":"PowerPoint 97","text":"<ul> <li>MS-PPT: PowerPoint (.ppt) Binary File Format</li> <li>OffVis : Microsoft Tool for reading PPT files</li> </ul>"},{"location":"faq.html","title":"Frequently asked questions","text":""},{"location":"faq.html#is-this-the-same-with-phppowerpoint-that-i-found-in-codeplex","title":"Is this the same with PHPPowerPoint that I found in CodePlex?","text":"<p>No. This one is much better with tons of new features that you can\u2019t find in PHPPowerPoint 0.1. The development in CodePlex is halted and switched to GitHub to allow more participation from the crowd. The more the merrier, right?</p>"},{"location":"faq.html#ive-been-running-phppowerpoint-from-codeplex-flawlessly-but-i-cant-use-the-latest-phppresentation-from-github-why","title":"I\u2019ve been running PHPPowerPoint from CodePlex flawlessly, but I can\u2019t use the latest PHPPresentation from GitHub. Why?","text":"<p>PHPPresentation requires PHP 5.3+ since v0.2, while PHPPowerPoint v0.1 from CodePlex can run with PHP 5.2. </p> <p>There\u2019s a lot of new features that we can get from PHP 5.3 and it\u2019s been around since 2009! You should upgrade your PHP version to use PHPPresentation v0.2+.</p>"},{"location":"faq.html#why-am-i-getting-a-class-not-found-error","title":"Why am I getting a class not found error?","text":"<p>If you have followed the instructions for either adding this package to your <code>composer.json</code> or registering the autoloader, then perhaps you forgot to include a <code>use</code> statement for the class(es) you are trying to access.</p> <p>Here's an example that allows you to refer to the <code>MemoryDrawing</code> class without having to specify the full class name in your code:</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\MemoryDrawing as MemoryDrawing;\n</code></pre> <p>If you have followed the installation instructions and you have added the necessary <code>use</code> statements to your code, then maybe you are still referencing the <code>PHPPowerPoint</code> classes using the old PEAR/PSR-0 approach.</p> <p>The 0.1 approach to naming classes used verbose class names to avoid namespace collisions with other libraries. For example, the <code>MemoryDrawing</code> class was actually called <code>PHPPowerPoint_Shape_MemoryDrawing</code>. </p> <p>Version 0.2 of the library renamed the classes, moved to a namespaced approach and switched to the PSR-0 autoloader. Interestingly, old code that was still referencing classes using the verbose approach still worked (which was pretty cool!). This is because the PSR-0 autoloader was correctly translating the verbose class references into the correct file name and location. However, <code>PHPPowerPoint</code> now relies exclusively on the PSR-4 autoloader, so old code that may have been referencing the classes with the verbose class names will need to be updated accordingly.</p>"},{"location":"faq.html#why-phppowerpoint-become-phppresentation","title":"Why PHPPowerPoint become PHPPresentation ?","text":"<p>As Roman Syroeshko noticed us, PowerPoint is a trademark. For avoiding any problems with Microsoft, we decide to change the name to a more logic name, with our panel of readers/writers.</p>"},{"location":"install.html","title":"Installation","text":""},{"location":"install.html#requirements","title":"Requirements","text":"<p>Mandatory:</p> <ul> <li>PHP 5.3+</li> <li>PHP ZIP extension</li> <li>PHP XML Parser extension</li> </ul> <p>Optional:</p> <ul> <li>PHP XMLWriter extension</li> </ul>"},{"location":"install.html#installation_1","title":"Installation","text":"<p>There are two ways to install PHPPresentation, i.e. via Composer or manually by downloading the library.</p>"},{"location":"install.html#using-composer","title":"Using Composer","text":"<p>To install via Composer, add the following lines to your <code>composer.json</code>:</p> <pre><code>{\n    \"require\": {\n        \"phpoffice/phppresentation\": \"dev-master\"\n    }\n}\n</code></pre>"},{"location":"install.html#using-manual-install","title":"Using manual install","text":"<p>To install manually:</p> <ul> <li>download PHPOffice\\PHPPresentation package from GitHub</li> <li>download PHPOffice\\Common package from GitHub</li> <li>extract the package and put the contents to your machine.</li> </ul> <pre><code>&lt;?php\n\nrequire_once 'path/to/PhpPresentation/src/PhpPresentation/Autoloader.php';\n\\PhpOffice\\PhpPresentation\\Autoloader::register();\n\nrequire_once 'path/to/PhpOffice/Common/src/Common/Autoloader.php';\n\\PhpOffice\\Common\\Autoloader::register();\n</code></pre>"},{"location":"install.html#samples","title":"Samples","text":"<p>After installation, you can browse and use the samples that we've provided, either by command line or using browser. If you can access your PHPPresentation library folder using browser, point your browser to the <code>samples</code> folder, e.g. <code>http://localhost/PhpPresentation/samples/</code>.</p>"},{"location":"changes/0.1.0.html","title":"0.1.0","text":"<ul> <li>Create a Presentation object</li> <li>Add one or more Slide objects</li> <li>Add one or more Shapes to Slide objects</li> <li>Text Shapes</li> <li>Image Shapes</li> <li>Export Presentation object to PowerPoint 2007 OpenXML format</li> </ul>"},{"location":"changes/0.2.0.html","title":"0.2.0 - 2014-07-22","text":""},{"location":"changes/0.2.0.html#features","title":"Features","text":"<ul> <li>Provide fluent interfaces where possible - @maartenba CP-815</li> <li>Use existing presentation template when writing PPTX file - @maartenba CP-1034</li> <li>Implement bullet and numeric lists - @maartenba CP-1093</li> <li>getProperties: setCompany feature request - @maartenba CP-1173</li> <li>New shape type: table - @maartenba CP-1375</li> <li>Use of CDATA text when writing text - @maartenba CP-2804</li> <li>Possibility to set borders on tables and table cells - @maartenba CP-1378</li> <li>Access to additional properties of Text Boxes - @maartenba CP-4921</li> <li>Applied patch 7010 - @maartenba CP-7010</li> <li>Applied patch 7020 - @maartenba CP-7020</li> <li>Add a hyperlink to an image or textbox - @maartenba CP-1196</li> <li>PowerPoint Charts - @maartenba CP-4953</li> <li>Editing chart data - @maartenba CP-5580</li> <li>Solid Fill support - @maartenba CP-5461</li> <li>Applied patch 8375 - @maartenba CP-8375</li> <li>Implement autoloader - @MarkBaker</li> <li>ODPresentation Writer : Implement Basic Writer - @Progi1984 GH-1</li> <li>ODPresentation Writer : Implement Support of Charts - @Progi1984 GH-33</li> <li>ODPresentation Writer : Implement Support of Lines - @Progi1984 GH-30</li> <li>ODPresentation Writer : Implement Support of Tables - @Progi1984 GH-31</li> <li>PowerPoint2007 Writer : Implement Support of Fill  - @Progi1984 GH-32</li> </ul>"},{"location":"changes/0.2.0.html#bugfix","title":"Bugfix","text":"<ul> <li>Allow solid color fill - @MarkBaker</li> <li>Table width setting Office 2007 - @maartenba CP-3910</li> <li>Bullet characters in Master Slide Layouts of template file become corrupted - @maartenba CP-4598</li> <li>Generated files cannot be opened in Office 08 for Mac OSX - @maartenba CP-3424</li> <li>Table Cell Borders Not Displaying Correctly - @maartenba CP-2541</li> <li>Multiple Master Slides are not supported - @maartenba CP-4597</li> <li>Images in Layouts other than first Master Slide within Template file causes corrupted PPTX - @maartenba CP-4596</li> <li>Fixed A3 and A4 formats dimensions - @delphiki GH-16</li> <li>Fixed custom document layout - @delphiki GH-18</li> <li>Filename parameter is required for IWriter::save method - @sapfeer0k GH-19</li> <li>DocumentLayout: Fix incorrect variable assignment - @kaiesh GH-6</li> <li>Hyperlink: Wrong input parameter object type in setHyperlink  - @nynka GH-23</li> <li>ODPresentation Writer: ODP writer is locale sensitive in the wrong places  - @Progi1984 GH-21</li> <li>ODPresentation Writer: Display InMemory Image  - @Progi1984 GH-29</li> <li>PowerPoint2007 Writer: Bar3D doesn't display  - @Progi1984 GH-32</li> <li>PowerPoint2007 Writer: Changed PowerPoint2007 writer attributes to protected - @delphiki GH-20</li> <li>PowerPoint2007 Writer: Scatter chart with numerical X values not working well  - @Progi1984 GH-3</li> <li>Shape RichText: Support of Vertical Alignment in PowerPoint2007 - @Progi1984 GH-35</li> </ul>"},{"location":"changes/0.2.0.html#miscellaneous","title":"Miscellaneous","text":"<ul> <li>Rename PHPPowerpoint.php to PHPPowerPoint.php - @maartenba CP-1165</li> <li>Create build script using Phing - @maartenba CP-5270</li> <li>QA: Prepare <code>.travis.yml</code> and <code>phpcs.xml</code> for Travis build passing - @Progi1984 @ivanlanin</li> <li>QA: Initiate unit tests - @Progi1984 @ivanlanin</li> <li>QA: Cleanup source code for PSR dan PHPDoc compatibility - @ivanlanin</li> <li>QA: Unit Tests - @Progi1984 &amp; @ivanlanin</li> <li>Doc: Initiate documentation - @ivanlanin</li> <li>Doc: Move to Read The Docs - @Progi1984</li> <li>Refactor: Change PHPPowerPoint_Shape_Shadow to PHPPowerPoint_Style_Shadow because it's a style, not a shape - @ivanlanin</li> <li>Refactor: Change PHPPowerPoint_SlideIterator to PHPPowerPoint_Slide_Iterator - @ivanlanin</li> </ul>"},{"location":"changes/0.3.0.html","title":"0.3.0 - 2014-09-22","text":""},{"location":"changes/0.3.0.html#features","title":"Features","text":"<ul> <li>PowerPoint97 Reader : Implement Basic Reader - @Progi1984 GH-15 GH-14 GH-4</li> <li>ODPresentation Writer : Ability to set auto shrink text - @Progi1984 GH-28</li> <li>Make package PSR-4 compliant. Autoload classes by composer out of the box - @Djuki GH-41</li> </ul>"},{"location":"changes/0.3.0.html#bugfix","title":"Bugfix","text":"<ul> <li>PowerPoint2007 Writer : Powerpoint Repair Error in Office 2010 - @Progi1984 GH-39</li> <li>PowerPoint2007 Writer : BUG: Repair Error / Wrong anchor if you don't set vertical alignment different to VERTICAL_BASE - @fregge GH-42</li> <li>PowerPoint2007 Writer : Keynote incompatibility - @catrane CP#237322 / @Progi1984 GH-46</li> </ul>"},{"location":"changes/0.3.0.html#miscellaneous","title":"Miscellaneous","text":"<ul> <li>QA : Move AbstractType for Chart - @Progi1984</li> <li>QA : Unit Tests - @Progi1984</li> </ul>"},{"location":"changes/0.4.0.html","title":"0.4.0 - 2015-07-07","text":""},{"location":"changes/0.4.0.html#features","title":"Features","text":"<ul> <li>Added support for grouping shapes together in a Group - @Pr0phet GH-68</li> <li>Added support for calculating the offset and extent on a Slide. - @Pr0phet GH-68</li> <li>Added support for Horizontal bar chart - @rdoepke @Progi1984 GH-58</li> <li>Added support for hyperlink on picture (ODPresentation &amp; PowerPoint2007) - @Progi1984 GH-49</li> <li>Added support for hyperlink on richtext (PowerPoint2007) - @JewrassicPark GH-49</li> <li>Added support for notes slide (ODPresentation &amp; PowerPoint2007) - @Progi1984 @JewrassicPark GH-63</li> <li>Added option for explosion in Pie3D Chart (ODPresentation &amp; PowerPoint2007) - @Progi1984 GH-76</li> <li>ODPresentation Writer : Support for fill in RichText - @Progi1984 GH-79</li> <li>ODPresentation Writer : Support for border style in RichText - @Progi1984 GH-79</li> <li>ODPresentation Writer : Support for Area Chart - @Progi1984 GH-82</li> <li>PowerPoint2007 Writer : Support for Area Chart - @Progi1984 GH-82</li> <li>ODPresentation Writer : Support for Bar Chart - @Progi1984 GH-82</li> <li>PowerPoint2007 Writer : Support for Bar Chart - @Progi1984 GH-82</li> <li>Added units in DocumentLayout - @Progi1984 GH-87</li> <li>Added support for transitions between slides - @Progi1984</li> <li>ODPresentation Writer : Support for Pie Chart &amp; Stack Percent Bar Charts - @jrking4 GH-108</li> <li>PowerPoint2007 Writer : Support for Pie Chart &amp; Stack Percent Bar Charts - @jrking4 GH-108</li> </ul>"},{"location":"changes/0.4.0.html#bugfix","title":"Bugfix","text":"<ul> <li>PSR-0 via composer broken - @Progi1984 GH-51</li> <li>ODPresentation Writer : Title in Legend in chart doesn't displayed - @Progi1984 GH-79</li> <li>ODPresentation Writer : Segments in Pie3D Chart are now in clockwise order, as in PowerPoint2007 Writer - @Progi1984 GH-79</li> <li>ODPresentation Writer : Axis in Line Chart have not tick marks displayed, as in PowerPoint2007 Writer - @Progi1984 GH-79</li> <li>ODPresentation Writer : Shadow don't work for RichTextShapes - @Progi1984 GH-81</li> <li>PowerPoint2007 Writer : Fill don't work for RichTextShapes - @Progi1984 GH-61</li> <li>PowerPoint2007 Writer : Border don't work for RichTextShapes - @Progi1984 GH-61</li> <li>PowerPoint2007 Writer : Hyperlink in table doesn't work - @Progi1984 GH-70</li> <li>PowerPoint2007 Writer : AutoFitNormal works with options (fontScale &amp; lineSpacingReduction) - @Progi1984 @desigennaro GH-71</li> <li>PowerPoint2007 Writer : Shadow don't work for RichTextShapes - @Progi1984 GH-81</li> <li>PowerPoint2007 Writer : Visibility of the Title doesn't work - @Progi1984 GH-107</li> <li>Refactor findLayoutIndex to findLayoutId where it assumes the slideLayout order was sorted. IMPROVED: unit tests - @kenliau GH-95</li> </ul>"},{"location":"changes/0.4.0.html#miscellaneous","title":"Miscellaneous","text":"<ul> <li>Improved the sample 04-Table for having a Text Run in a Cell - @Progi1984 GH-84</li> <li>Improved the sample 04-Table for having two links in a Cell - @Progi1984 GH-93</li> <li>Improved the documentation about Table Shapes and cell width - @Progi1984 GH-104</li> <li>Some parts of code shared between PHPOffice projects have been moved to PhpOffice/Common - @Progi1984</li> <li>Refactored the PowerPoint97 Reader for managing the group shape and improving evolutions - @Progi1984 GH-110</li> <li>Added a sample (12) for PowerPoint97 Reader with tree of the PhpPowerPoint object - @Progi1984 GH-110</li> </ul>"},{"location":"changes/0.5.0.html","title":"0.5.0 - 2015-10-08","text":""},{"location":"changes/0.5.0.html#features","title":"Features","text":"<ul> <li>PowerPoint2007 Reader : Initial Commit - @Progi1984 GH-44</li> <li>ODPresentation Reader : Initial Commit - @Progi1984 GH-113</li> </ul>"},{"location":"changes/0.5.0.html#bugfix","title":"Bugfix","text":"<ul> <li>Fixed the sample in Readme.md - @Progi1984 GH-114</li> </ul>"},{"location":"changes/0.5.0.html#changes","title":"Changes","text":"<ul> <li>PhpOffice\\PhpPowerpoint becomes PhpOffice\\PhpPresentation - @Progi1984 GH-25</li> <li>PhpOffice\\PhpPowerpoint\\Style\\Font::setStriketrough has been removed : Use setStrikethrough - @Progi1984</li> <li>PhpOffice\\PhpPowerpoint\\AbstractShape::getSlide has been removed - @Progi1984</li> <li>PhpOffice\\PhpPowerpoint\\AbstractShape::setSlide has been removed - @Progi1984</li> <li>PhpOffice\\PhpPowerpoint\\DocumentLayout::getLayoutXmilli has been removed : getCX(DocumentLayout::UNIT_MILLIMETER) - @Progi1984</li> <li>PhpOffice\\PhpPowerpoint\\DocumentLayout::getLayoutYmilli has been removed : getCY(DocumentLayout::UNIT_MILLIMETER) - @Progi1984</li> <li>PhpOffice\\PhpPowerpoint\\DocumentLayout::setLayoutXmilli has been removed : setCX(DocumentLayout::UNIT_MILLIMETER) - @Progi1984</li> <li>PhpOffice\\PhpPowerpoint\\DocumentLayout::setLayoutYmilli has been removed : setCY(DocumentLayout::UNIT_MILLIMETER) - @Progi1984</li> <li>Update the dependence PhpOffice\\Common to 0.2.* - @Progi1984</li> <li>Migrated Travis CI to legacy - @Progi1984 GH-115</li> </ul>"},{"location":"changes/0.6.0.html","title":"0.6.0 - 2016-01-24","text":""},{"location":"changes/0.6.0.html#bugfix","title":"Bugfix","text":"<ul> <li>Documentation : Fixes in the rename of PHPPowerPoint - @Progi1984 GH-127</li> <li>ODPresentation : Exclude SVM files for reader - @Progi1984 GH-141</li> <li>PowerPoint2007 Writer : Bugfix for opening PPTX on Mac - @thsteinmetz GH-89</li> </ul>"},{"location":"changes/0.6.0.html#changes","title":"Changes","text":"<ul> <li>PhpOffice\\PhpPresentation\\getProperties has been deprecated for PhpOffice\\PhpPresentation\\getDocumentProperties - @Progi1984 GH-154</li> <li>PhpOffice\\PhpPresentation\\setProperties has been deprecated for PhpOffice\\PhpPresentation\\setDocumentProperties - @Progi1984 GH-154</li> <li>PhpOffice\\PhpPowerpoint\\Style\\Alignment::setLevel can now be defined great than 8 - @Progi1984 GH-141</li> </ul>"},{"location":"changes/0.6.0.html#features","title":"Features","text":"<ul> <li>ODPresentation Reader/Writer : Name of the slide - @Progi1984 GH-121</li> <li>ODPresentation Reader/Writer : Slide Background Color or Image - @Progi1984 GH-152</li> <li>PowerPoint2007 Reader : Support for Layout Name - @Progi1984 GH-144</li> <li>PowerPoint2007 Reader/Writer : Mark as final - @Progi1984 GH-118</li> <li>PowerPoint2007 Reader/Writer : Set default zoom value for presentation - @Progi1984 GH-122</li> <li>PowerPoint2007 Reader/Writer : Slide Background Color or Image - @Progi1984 GH-152</li> <li>PowerPoint2007 Reader/Writer : Add Properties for allowing loop continuously until 'Esc' - @Progi1984 GH-154</li> </ul>"},{"location":"changes/0.7.0.html","title":"0.7.0 - 2016-09-12","text":""},{"location":"changes/0.7.0.html#bugfix","title":"Bugfix","text":"<ul> <li>Fixed the image project - @mvargasmoran GH-177</li> <li>PowerPoint2007 Writer : Bugfix for printing slide notes - @JewrassicPark @Progi1984 GH-179</li> </ul>"},{"location":"changes/0.7.0.html#changes","title":"Changes","text":"<ul> <li>PhpOffice\\PhpPresentation\\Writer\\ODPresentation : Move to Design Pattern Decorator - @Progi1984</li> <li>PhpOffice\\PhpPresentation\\Writer\\PowerPoint2007 : Move to Design Pattern Decorator - @Progi1984</li> <li>PhpOffice\\PhpPresentation\\Shape\\Type\\AbstracType\\getData has been deprecated for PhpOffice\\PhpPresentation\\Shape\\Type\\AbstracType\\getSeries - @Progi1984 GH-169</li> <li>PhpOffice\\PhpPresentation\\Shape\\Type\\AbstracType\\setData has been deprecated for PhpOffice\\PhpPresentation\\Shape\\Type\\AbstracType\\setSeries - @Progi1984 GH-169</li> <li>Added documentation for chart series (font, outline, marker) - @Progi1984 GH-169</li> <li>Internal Structure for Drawing Shape - @Progi1984 GH-192</li> <li>Documentation about manual installation - @danielbair GH-254</li> </ul>"},{"location":"changes/0.7.0.html#features","title":"Features","text":"<ul> <li>ODPresentation &amp; PowerPoint2007 Writer : Add support for Comment - @Progi1984 GH-116</li> <li>ODPresentation &amp; PowerPoint2007 Writer : Thumbnail of the presentation - @Progi1984 GH-125</li> <li>ODPresentation &amp; PowerPoint2007 Writer : Add support for Gridlines in Chart - @Progi1984 GH-129</li> <li>ODPresentation &amp; PowerPoint2007 Writer : Support for images in base 64 - @Progi1984 GH-168</li> <li>ODPresentation &amp; PowerPoint2007 Writer : Marker of Series in Line &amp; Scatter chart is customizable - @Progi1984 GH-169</li> <li>ODPresentation &amp; PowerPoint2007 Writer : Outline of Series in Line &amp; Scatter chart is customizable - @Progi1984 GH-169</li> <li>ODPresentation &amp; PowerPoint2007 &amp; Serialized Writer : Support for Zip Adapter - @Progi1984 GH-176</li> <li>ODPresentation &amp; PowerPoint2007 Writer : language property to TextElement - @skrajewski &amp; @Progi1984 GH-180</li> <li>ODPresentation &amp; PowerPoint2007 Writer : Add Font Support For Chart Axis - @jrking4 GH-186</li> <li>ODPresentation &amp; PowerPoint2007 Writer : Support for video - @Progi1984 GH-123</li> <li>ODPresentation &amp; PowerPoint2007 Writer : Support for Visibility for slides - @Progi1984</li> <li>PowerPoint2007 Reader : Layout Management - @vincentKool @Progi1984 GH-161</li> <li>PowerPoint2007 Reader : Slide size - @loverslcn @Progi1984 GH-246</li> <li>PowerPoint2007 Reader : Bullet Color - @Progi1984 GH-257</li> <li>PowerPoint2007 Reader : Line Spacing - @Progi1984 GH-257</li> <li>PowerPoint2007 Writer : Presentation with predefined View Type - @Progi1984 GH-120</li> <li>PowerPoint2007 Writer : Implement alpha channel to Fills - @Dayjo GH-203 / @Progi1984 GH-215</li> <li>PowerPoint2007 Writer : Implement Animations - @JewrassicPark GH-214 / @Progi1984 GH-217</li> <li>PowerPoint2007 Writer : Layout Management - @vincentKool @Progi1984 GH-161</li> <li>PowerPoint2007 Writer : Bullet Color - @piotrbelina GH-249</li> <li>PowerPoint2007 Writer : Line Spacing - @piotrbelina GH-249</li> </ul>"},{"location":"changes/0.8.0.html","title":"0.8.0 - 2017-04-03","text":""},{"location":"changes/0.8.0.html#bugfix","title":"Bugfix","text":"<ul> <li>PowerPoint2007 Writer : Fixed the marker on line chart when symbol is none - @Napryc GH-211</li> <li>PowerPoint2007 Writer : Fixed the format value in Pie Chart - @Napryc GH-212</li> <li>PowerPoint2007 Writer : The presentation need repairs on Mac @jrking4 GH-266 GH-276</li> <li>PowerPoint2007 Writer : Fix for PowerPoint2007 Writer (Need repair) @Progi1984 GH-266 GH-274 GH-276 GH-282 GH-302</li> <li>PowerPoint2007 Writer : Fixed the axis title in bar chart - @pgee70 GH-267</li> <li>PowerPoint2007 Writer : Fixed the label position in bar chart - @pgee70 GH-268</li> <li>PowerPoint2007 Writer : Support of margins in cell in table - @carlosafonso @Progi1984 GH-273 GH-315</li> <li>Fixed the corruption of file when an addExternalSlide is called - @Progi1984 GH-240</li> </ul>"},{"location":"changes/0.8.0.html#changes","title":"Changes","text":"<ul> <li>Misc : Added two methods for setting Border &amp; Fill in Legend - @Progi1984 GH-265</li> </ul>"},{"location":"changes/0.8.0.html#features","title":"Features","text":"<ul> <li>ODPresentation Writer : Show/Hide Value / Name / Series Name in Chart - @Progi1984 GH-272</li> <li>ODPresentation Writer : Axis Bounds in Chart - @Progi1984 GH-269</li> <li>PowerPoint97 Reader : Support of Slide Note - @Progi1984 GH-226</li> <li>PowerPoint2007 Reader : Support of Shape Table - @Progi1984 GH-240</li> <li>PowerPoint2007 Reader : Support of Slide Note - @Progi1984 GH-226</li> <li>PowerPoint2007 Reader : Support text direction in Alignment for Table - @Progi1984 GH-218</li> <li>PowerPoint2007 Writer : Implement character spacing - @jvanoostrom GH-301</li> <li>PowerPoint2007 Writer : Axis Bounds in Chart - @Progi1984 GH-269</li> <li>PowerPoint2007 Writer : Implement Legend Key in Series for Chart - @Progi1984 GH-319</li> <li>PowerPoint2007 Writer : Support text direction in Alignment for Table - @SeregPie GH-218</li> <li>PowerPoint2007 Writer : Support tick mark &amp; unit in Axis for Chart - @Faab GH-218</li> <li>PowerPoint2007 Writer : Support separator in Series for Chart - @jphchaput GH-218</li> <li>PowerPoint2007 Writer : Add support for Outline in Axis - @Progi1984 GH-255</li> <li>PowerPoint2007 Writer : Support autoscale for Chart - @Progi1984 GH-293</li> </ul>"},{"location":"changes/0.9.0.html","title":"0.9.0 - 2017-07-05","text":""},{"location":"changes/0.9.0.html#bugfix","title":"Bugfix","text":"<ul> <li>PowerPoint2007 Writer : Margins in table cell - @Progi1984 GH-347</li> </ul>"},{"location":"changes/0.9.0.html#changes","title":"Changes","text":"<ul> <li>PowerPoint2007 Writer : Write percentage values with a trailing percent sign instead of formatted as 1000th of a percent to comply with the standard - @k42b3 GH-307</li> </ul>"},{"location":"changes/0.9.0.html#features","title":"Features","text":"<ul> <li>PowerPoint2007 Writer : Implemented XSD validation test case according to the ECMA/ISO standard - @k42b3 GH-307</li> <li>PowerPoint2007 Writer : Implement visibility for axis - @kw-pr @Progi1984 GH-356</li> <li>PowerPoint2007 Writer : Implement gap width in Bar(3D) Charts - @Progi1984 GH-358</li> </ul>"},{"location":"changes/1.0.0.html","title":"1.0.0","text":""},{"location":"changes/1.0.0.html#bugfix","title":"Bugfix","text":"<ul> <li>PowerPoint2007 Writer : Text is subscripted when set superscript to false - @qmachard GH-360</li> <li>Core : Defining width &amp; height of a shape don't return any error if width &amp; height were equal to 0 - @surger GH-555</li> <li>ODPresentation Writer : Display axis title depending the visibility - @Progi1984 GH-410</li> </ul>"},{"location":"changes/1.0.0.html#changes","title":"Changes","text":"<ul> <li>Dropped support for HHVM - @sunspikes GH-556</li> <li>PHP 7.1 is now supported - @Progi1984 GH-355</li> <li>Added support PHP 7.4 to 8.0 &amp; Removed support PHP &lt; 7.1 - @Progi1984 GH-636</li> <li>Added support for PHP 8.1 - @Progi1984 GH-661</li> <li>Removed deprecated methods/classes - @Progi1984 GH-650</li> <li>Migrated use of PHPExcel to PhpSpreadsheet - @Progi1984 GH-652</li> <li>PhpOffice\\PhpPresentation\\Style\\Color : Define only the transparency - @Progi1984 GH-370</li> <li>PowerPoint2007 Reader : Background Color based on SchemeColor - @Progi1984 GH-397</li> <li>PowerPoint2007 Reader : Support for hyperlinks under pictures - @ulziibuyan</li> <li>PowerPoint2007 Reader : Load images in their initial format (and not by default in PNG) - @polidog GH-553</li> </ul>"},{"location":"changes/1.0.0.html#features","title":"Features","text":"<ul> <li>Support for bar overlap in 2D bar charts - @mindline GH-667<ul> <li>PowerPoint2007 Writer</li> </ul> </li> <li>Support for the position of Legend in ODPresentation Writer - @Progi1984 GH-355</li> <li>Support for DoughnutChart - @Progi1984 GH-355<ul> <li>ODPresentation Writer</li> <li>PowerPoint2007 Writer</li> </ul> </li> <li>Support for fill for transparent image - @Progi1984 &amp; @JewrassicPark GH-370<ul> <li>ODPresentation Reader</li> <li>ODPresentation Writer</li> <li>PowerPoint2007 Reader</li> <li>PowerPoint2007 Writer</li> </ul> </li> <li>Support for Slideshow Type (Fullscreen/Window/Kiosk mode) - @zmip GH-588 &amp; @Progi1986 GH-656<ul> <li>ODPresentation Reader</li> <li>ODPresentation Writer</li> <li>PowerPoint2007 Reader</li> <li>PowerPoint2007 Writer</li> </ul> </li> <li>Support for RTL in Alignment &amp; Font Format (Latin/East Asian/Complex Script) - @amirakbari GH-629 &amp; @Progi1986 GH-657<ul> <li>ODPresentation Reader</li> <li>ODPresentation Writer</li> <li>PowerPoint2007 Reader</li> <li>PowerPoint2007 Writer</li> </ul> </li> <li>Support for Border &amp; Fill for Chart's Marker in PowerPoint2007 Writer - @ksmeeks0001 GH-627 &amp; @Progi1986 GH-658</li> <li>Support for rotation for axis label - @Progi1986 GH-410<ul> <li>ODPresentation Writer</li> <li>PowerPoint2007 Writer</li> </ul> </li> <li>Support for managing missing values in Chart - @TonisOrmisson GH-581 &amp; @Progi1986 GH-659<ul> <li>ODPresentation Writer</li> <li>PowerPoint2007 Writer</li> </ul> </li> <li>Support for defining ticks label position for Axis in Chart - @Web-Mobiledev GH-591 &amp; @Progi1986 GH-660<ul> <li>ODPresentation Writer</li> <li>PowerPoint2007 Writer</li> </ul> </li> <li>Support for interval unit for Chart's Axis - @Progi1984 GH-546<ul> <li>ODPresentation Writer</li> <li>PowerPoint2007 Writer</li> </ul> </li> <li>Support for line smooth for line and scatter chart - @ksmeeks0001 GH-626 &amp; @Progi1984 GH-662<ul> <li>ODPresentation Writer</li> <li>PowerPoint2007 Writer</li> </ul> </li> <li>Support for column spacing for RichText - @zoff83 GH-617 &amp; @Progi1984 GH-663<ul> <li>PowerPoint2007 Reader</li> <li>PowerPoint2007 Writer</li> </ul> </li> <li>Support for line spacing mode &amp; spacing before/after for Paragraph - @zoff83 GH-617 &amp; @Progi1984 GH-663<ul> <li>ODPresentation Reader</li> <li>ODPresentation Writer</li> <li>PowerPoint2007 Reader</li> <li>PowerPoint2007 Writer</li> </ul> </li> <li>Support for custom document properties - @Progi1984 GH-313<ul> <li>ODPresentation Reader</li> <li>ODPresentation Writer</li> <li>PowerPoint2007 Reader</li> <li>PowerPoint2007 Writer</li> </ul> </li> <li>Support for RadarChart - @Progi1984 GH-253<ul> <li>ODPresentation Writer</li> <li>PowerPoint2007 Writer</li> </ul> </li> <li>Support for Drawing (SVG format) - @Aggiekev GH-531 &amp; @Progi1984 GH-666<ul> <li>ODPresentation Reader</li> <li>ODPresentation Writer</li> <li>PowerPoint2007 Reader</li> <li>PowerPoint2007 Writer</li> </ul> </li> <li>Support for Geometric form/AutoShape - @Progi1984 GH-545<ul> <li>PowerPoint2007 Writer</li> </ul> </li> </ul>"},{"location":"changes/1.0.0.html#project-management","title":"Project Management","text":"<ul> <li>Migrated from Travis CI to Github Actions - @Progi1984 GH-635</li> <li>Enabled PHPStan - @Progi1984 GH-639</li> <li>Enabled PHPCSFixer - @Progi1984 GH-637 / GH-640</li> <li>Added link to Coveralls - @Progi1984 GH-648</li> <li>Migrated from ReadTheDocs to MkDocs &amp; Github Actions - @Progi1984 GH-647</li> <li>Added Changelog to MkDocs - @Progi1984 GH-649</li> </ul>"},{"location":"changes/1.0.0.html#bc-breaks","title":"BC Breaks","text":"<ul> <li>Classes have been strict typed</li> <li><code>PhpOffice\\PhpPresentation\\PhpPresentation</code><ul> <li>Removed method <code>getProperties()</code> (replaced by <code>getDocumentProperties()</code>)</li> <li>Removed method <code>getZoom()</code> (replaced by <code>getPresentationProperties()-&gt;getZoom()</code>)</li> <li>Removed method <code>isMarkedAsFinal()</code> (replaced by <code>getPresentationProperties()-&gt;isMarkedAsFinal()</code>)</li> <li>Removed method <code>markAsFinal($state)</code> (replaced by <code>getPresentationProperties()-&gt;markAsFinal($state)</code>)</li> <li>Removed method <code>setProperties($value)</code> (replaced by <code>setDocumentProperties()</code>)</li> <li>Removed method <code>setZoom($zoom)</code> (replaced by <code>getPresentationProperties()-&gt;setZoom($zoom)</code>)</li> </ul> </li> <li><code>PhpOffice\\PhpPresentation\\Shape\\Chart\\Type\\AbstractType</code><ul> <li>Removed method <code>getData()</code> (replaced by <code>getSeries()</code>)</li> <li>Removed method <code>setData($value)</code> (replaced by <code>setSeries($value)</code>)</li> </ul> </li> <li><code>PhpOffice\\PhpPresentation\\Writer\\PowerPoint2007</code><ul> <li>Removed method <code>getLayoutPack()</code></li> <li>Removed method <code>setLayoutPack($pValue)</code></li> </ul> </li> <li><code>PhpOffice\\PhpPresentation\\Writer\\PowerPoint2007\\LayoutPack\\AbstractLayoutPack</code><ul> <li>Removed class</li> </ul> </li> <li><code>PhpOffice\\PhpPresentation\\Writer\\PowerPoint2007\\LayoutPack\\PackDefault</code><ul> <li>Removed class</li> </ul> </li> <li><code>PhpOffice\\PhpPresentation\\Writer\\PowerPoint2007\\LayoutPack\\TemplateBased</code><ul> <li>Removed class</li> </ul> </li> </ul>"},{"location":"changes/1.1.0.html","title":"1.1.0 - WIP","text":""},{"location":"changes/1.1.0.html#features","title":"Features","text":"<ul> <li>Support for axis options - @mindline in #676<ul> <li>Axis intersection point (axis crossing) through <code>setCrossesAt</code>/ <code>getCrossesAt</code></li> <li>Reverse axis order through <code>setIsReversedOrder</code>/ <code>isReversedOrder</code></li> <li>PowerPoint2007 Writer</li> </ul> </li> <li>Support for Hyperlink Text Color - @MartynasJanu &amp; @Progi1984 in #682<ul> <li>PowerPoint2007 Reader</li> <li>PowerPoint2007 Writer</li> </ul> </li> <li>Added support for PHP 8.2 &amp; 8.3 - @Progi1984 in #769</li> <li>PowerPoint 2007 Writer : Added support to Font for Axis tick label &amp; chinese font support - @zhengwhizz in #774</li> <li>Support for Capitalization for Font - @CxRxExO &amp; @Progi1984 in #779<ul> <li>ODPresentation Reader</li> <li>ODPresentation Writer</li> <li>PowerPoint2007 Reader</li> <li>PowerPoint2007 Writer</li> </ul> </li> <li>PowerPoint2007 Writer: Enable style and position of a Placeholder - @qmachard in #787</li> <li>PowerPoint2007 Reader: Added support for thumbnail image - @devX2712 in #788</li> </ul>"},{"location":"changes/1.1.0.html#improvements","title":"Improvements","text":"<ul> <li>Slide : Raised max value for identifier rand call - @Scheissy in #777</li> <li>Document Properties : Support for Revision &amp; Status - @devX2712 in #788<ul> <li>PowerPoint2007 Reader</li> <li>PowerPoint2007 Writer</li> </ul> </li> <li>Presentation Properties : Added support to define content of the thumbnail - @devX2712 in #788</li> <li>Font : Support for Capitalization, Strikethrough, Pitch Family, Charset &amp; Panose - @devX2712 in #788<ul> <li>PowerPoint2007 Reader</li> <li>PowerPoint2007 Writer </li> </ul> </li> <li>Font : Replaced Superscript/Subscript by baseline in PowerPoint2007 Writer - @devX2712 in #788</li> <li>RichText : Support for Vertical Align - @devX2712 in #788<ul> <li>PowerPoint2007 Reader</li> <li>PowerPoint2007 Writer </li> </ul> </li> <li>Shadow : Support for Type Inner &amp; Reflection - @devX2712 in #788<ul> <li>PowerPoint2007 Reader</li> <li>PowerPoint2007 Writer </li> </ul> </li> </ul>"},{"location":"changes/1.1.0.html#bugfixes","title":"Bugfixes","text":"<ul> <li>PowerPoint2077 Writer : Fixed broken PPT Presentations due to MS Office update 2309 - @WFarmerEthisphere in #770</li> <li>PowerPoint2077 Writer : Fixed error when defining min/max bounds to 0 - @LilyEssence in #771</li> <li>PowerPoint2007 Writer : Outline : Fixed the base unit - @Pakku in #772</li> <li>PowerPoint2007 Writer : Fixed column indices for embedded spreadsheets - @michael-roth in #773</li> <li>PowerPoint2007 Reader : Load images from file only if valid - @aelliott1485 in #775</li> <li>PowerPoint2007 Writer : Fixed broken video file relationship - @potofcoffee in #776</li> <li>PowerPoint2007 Writer : Fixed issue when first element in series is null - @ksmeeks0001 in #778</li> <li>PowerPoint2007 &amp; ODPresentation Writer : Use of the disk caching directory for temporary files - @nhalle in #781</li> <li>PowerPoint2007 Reader : Fixed reading of RichText shape in Note - @aelliott1485 in #782</li> <li>PowerPoint2007 Writer : Fixed broken animation for first shape - @shannan1989 in #783</li> <li>Samples : Allow to run without composer - @pal-software in #784</li> <li>PowerPoint2007 Writer: Extract relations from nested ShapeContainerInterface objects - @DennisBirkholz in #785</li> <li>General : Fixed copying bug when presentation had multiple slides @dees040 in #786</li> </ul>"},{"location":"changes/1.1.0.html#miscellaneous","title":"Miscellaneous","text":"<ul> <li>Fixed CI - @Progi1984 in #766</li> <li>CI : Removed deprecations - @Progi1984 in #780</li> </ul>"},{"location":"changes/1.1.0.html#bc-breaks","title":"BC Breaks","text":"<ul> <li><code>PhpOffice\\PhpPresentation\\Style\\Outline</code> : the width is now based on pixels (before in points)</li> </ul>"},{"location":"usage/introduction.html","title":"General","text":""},{"location":"usage/presentation.html","title":"Presentation","text":""},{"location":"usage/presentation.html#basic-code","title":"Basic code","text":"<p>The following is a basic example of the PHPPresentation library. More examples are provided in the samples folder.</p> <pre><code>&lt;?php\n\n$presentation = new PhpPresentation();\n\n// Create slide\n$currentSlide = $presentation-&gt;getActiveSlide();\n\n// Create a shape (drawing)\n$shape = $currentSlide-&gt;createDrawingShape();\n$shape-&gt;setName('PHPPresentation logo')\n        -&gt;setDescription('PHPPresentation logo')\n        -&gt;setPath('./resources/phppresentation_logo.gif')\n        -&gt;setHeight(36)\n        -&gt;setOffsetX(10)\n        -&gt;setOffsetY(10);\n$shape-&gt;getShadow()-&gt;setVisible(true)\n                    -&gt;setDirection(45)\n                    -&gt;setDistance(10);\n\n// Create a shape (text)\n$shape = $currentSlide-&gt;createRichTextShape()\n        -&gt;setHeight(300)\n        -&gt;setWidth(600)\n        -&gt;setOffsetX(170)\n        -&gt;setOffsetY(180);\n$shape-&gt;getActiveParagraph()-&gt;getAlignment()-&gt;setHorizontal(Alignment::HORIZONTAL_CENTER);\n$textRun = $shape-&gt;createTextRun('Thank you for using PHPPresentation!');\n$textRun-&gt;getFont()-&gt;setBold(true)\n                    -&gt;setSize(60)\n                    -&gt;setColor(new Color('FFE06B20'));\n\n$writerPPTX = IOFactory::createWriter($presentation, 'PowerPoint2007');\n$writerPPTX-&gt;save(__DIR__ . '/sample.pptx');\n$writerODP = IOFactory::createWriter($presentation, 'ODPresentation');\n$writerODP-&gt;save(__DIR__ . '/sample.odp');\n</code></pre>"},{"location":"usage/presentation.html#document-information","title":"Document information","text":"<p>You can set the document information such as title, creator, and company name. Use the following functions:</p> <pre><code>&lt;?php\n\n$properties = $presentation-&gt;getProperties();\n\n$properties-&gt;setCreator('My name');\n$properties-&gt;setCompany('My factory');\n$properties-&gt;setTitle('My title');\n$properties-&gt;setDescription('My description');\n$properties-&gt;setCategory('My category');\n$properties-&gt;setLastModifiedBy('My name');\n$properties-&gt;setCreated(mktime(0, 0, 0, 3, 12, 2014));\n$properties-&gt;setModified(mktime(0, 0, 0, 3, 14, 2014));\n$properties-&gt;setSubject('My subject');\n$properties-&gt;setKeywords('my, key, word');\n$properties-&gt;setStatus('Work in Progress');\n$properties-&gt;setRevision('Version 1.2.3');\n</code></pre>"},{"location":"usage/presentation.html#custom-properties","title":"Custom Properties","text":"<p>You can add custom properties with the method <code>setCustomProperty</code>.</p> <p>Multiple types are available: * <code>DocumentProperties::PROPERTY_TYPE_STRING</code> for string value, * <code>DocumentProperties::PROPERTY_TYPE_BOOLEAN</code> for boolean value, * <code>DocumentProperties::PROPERTY_TYPE_FLOAT</code> for float value, * <code>DocumentProperties::PROPERTY_TYPE_INTEGER</code> for integer value, * <code>DocumentProperties::PROPERTY_TYPE_DATE</code> for date value, * <code>DocumentProperties::PROPERTY_TYPE_UNKNOWN</code> for unknown type value.</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\DocumentProperties;\n\n$properties = $presentation-&gt;getProperties();\n\n// Set the custom property\n$properties-&gt;setCustomProperty('propertyName', 'propertyValue', DocumentProperties::PROPERTY_TYPE_STRING);\n\n// Check if a custom property exists\n$properties-&gt;isCustomPropertySet('unknown'); // return `false`\n$properties-&gt;isCustomPropertySet('propertyName'); // return `true`\n\n// Return all custom properties\n$properties-&gt;getCustomProperties(); // return `['propertyName']`\n\n// Return value from a custom property\n$properties-&gt;getCustomPropertyValue('unknown'); // return `null` if not set\n$properties-&gt;getCustomPropertyValue('propertyName'); // return `propertyValue`\n\n// Return type from a custom property\n$properties-&gt;getCustomPropertyType('unknown'); // return `null` if not set\n$properties-&gt;getCustomPropertyType('propertyName'); // return `DocumentProperties::PROPERTY_TYPE_STRING`\n</code></pre>"},{"location":"usage/presentation.html#presentation-properties","title":"Presentation Properties","text":"<p>You can define some properties which are relative to the presentation, like the zoom or the thumbnail.</p>"},{"location":"usage/presentation.html#comments","title":"Comments","text":"<p>You can define if the presentation display or not the comments with the method <code>setCommentVisible</code>.</p> <pre><code>&lt;?php\n\n$presentation = new PhpPresentation();\n$properties = $presentation-&gt;getPresentationProperties();\n// Get the display for comment\nvar_export($properties-&gt;isCommentVisible());\n// Output : false\n// Enable the display for comment\n$properties-&gt;setCommentVisible(true);\n// Get the display for comment\nvar_export($properties-&gt;isCommentVisible());\n// Output : true\n</code></pre>"},{"location":"usage/presentation.html#last-view","title":"Last View","text":"<p>You can define the last view of the presentation with the method <code>setLastView</code>.</p> <pre><code>&lt;?php\n\n$presentation = new PhpPresentation();\n\n$properties = $presentation-&gt;getPresentationProperties();\n// Get the last view of the presentation\necho $properties-&gt;getZoom();\n// Output : PresentationProperties::VIEW_SLIDE\n// Set the last view of the presentation\n$properties-&gt;setLastView(PresentationProperties::VIEW_NOTES);\n// Get the last view of the presentation\necho $properties-&gt;getZoom();\n// Output : PresentationProperties::VIEW_NOTES\n</code></pre>"},{"location":"usage/presentation.html#mark-as-final","title":"Mark as final","text":"<p>You must define your presentation as final with the method <code>markAsFinal()</code></p> <pre><code>&lt;?php\n\n// Default\n$state = $presentation-&gt;isMarkedAsFinal();\n// $state = false\n\n// Without parameter\n$presentation-&gt;markAsFinal();\n$state = $presentation-&gt;isMarkedAsFinal();\n// $state = true\n\n// Parameter = false\n$presentation-&gt;markAsFinal(false);\n$state = $presentation-&gt;isMarkedAsFinal();\n// $state = false\n\n// Parameter = true\n$presentation-&gt;markAsFinal(true);\n$state = $presentation-&gt;isMarkedAsFinal();\n// $state = true\n</code></pre>"},{"location":"usage/presentation.html#slideshow-type","title":"Slideshow type","text":"<p>You can define the type of slideshow you can with the method <code>setSlideshowType</code>.</p> <p></p> <p>Differents types are available:</p> <ul> <li><code>PresentationProperties::SLIDESHOW_TYPE_PRESENT</code> for Presented by a speaker</li> <li><code>PresentationProperties::SLIDESHOW_TYPE_BROWSE</code> for Browsed by an individual</li> <li><code>PresentationProperties::SLIDESHOW_TYPE_KIOSK</code> for Browsed at a kiosk</li> </ul> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\PresentationProperties;\n\n$presentation = new PhpPresentation();\n\n$properties = $presentation-&gt;getPresentationProperties();\n// Set type of slideshow\n$properties-&gt;setSlideshowType(PresentationProperties::SLIDESHOW_TYPE_PRESENT);\n// Get type of slideshow\necho $properties-&gt;getSlideshowType();\n</code></pre>"},{"location":"usage/presentation.html#thumbnail","title":"Thumbnail","text":"<p>You can define the thumbnail of the presentation with the method <code>setThumbnailPath</code>.</p>"},{"location":"usage/presentation.html#from-a-file","title":"From a file","text":"<pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\PresentationProperties;\n\n$presentation = new PhpPresentation();\n\n$properties = $presentation-&gt;getPresentationProperties();\n// Set path of the thumbnail\n$properties-&gt;setThumbnailPath(\n    __DIR__.'\\resources\\phppowerpoint_logo.gif',\n    PresentationProperties::THUMBNAIL_FILE\n);\n// Get path of the thumbnail\necho $properties-&gt;getThumbnailPath();\n// Get content of the thumbnail\necho $properties-&gt;getThumbnail();\n</code></pre>"},{"location":"usage/presentation.html#from-the-content-of-the-file","title":"From the content of the file","text":"<pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\PresentationProperties;\n\n$presentation = new PhpPresentation();\n\n$properties = $presentation-&gt;getPresentationProperties();\n// Set path of the thumbnail\n$properties-&gt;setThumbnailPath(\n    '',\n    PresentationProperties::THUMBNAIL_DATA,\n    file_get_contents(__DIR__.'\\resources\\phppowerpoint_logo.gif')\n);\n// Get content of the thumbnail\necho $properties-&gt;getThumbnail();\n</code></pre>"},{"location":"usage/presentation.html#zoom","title":"Zoom","text":"<p>You can define the zoom of the presentation with the method <code>setZoom</code>.</p> <pre><code>&lt;?php\n\n$presentation = new PhpPresentation();\n\n$properties = $presentation-&gt;getPresentationProperties();\n// Get zoom of the presentation\necho $properties-&gt;getZoom();\n// Output : 1\n// Set zoom of the presentation (3 = 300%)\n$properties-&gt;setZoom(3);\n// Get zoom of the presentation\necho $properties-&gt;getZoom();\n// Output : 3\n</code></pre>"},{"location":"usage/readers.html","title":"Readers","text":""},{"location":"usage/readers.html#odpresentation","title":"ODPresentation","text":"<p>The name of the reader is <code>ODPresentation</code>.</p> <pre><code>&lt;?php\n\n$reader = IOFactory::createReader('ODPresentation');\n$reader-&gt;load(__DIR__ . '/sample.odp');\n</code></pre>"},{"location":"usage/readers.html#powerpoint97","title":"PowerPoint97","text":"<p>The name of the reader is <code>PowerPoint97</code>.</p> <pre><code>&lt;?php\n\n$reader = IOFactory::createReader('PowerPoint97');\n$reader-&gt;load(__DIR__ . '/sample.ppt');\n</code></pre>"},{"location":"usage/readers.html#powerpoint2007","title":"PowerPoint2007","text":"<p>The name of the reader is <code>PowerPoint2007</code>.</p> <pre><code>&lt;?php\n\n$reader = IOFactory::createReader('PowerPoint2007');\n$reader-&gt;load(__DIR__ . '/sample.pptx');\n</code></pre>"},{"location":"usage/readers.html#serialized","title":"Serialized","text":"<p>The name of the reader is <code>Serialized</code>.</p> <pre><code>&lt;?php\n\n$reader = IOFactory::createReader('Serialized');\n$reader-&gt;load(__DIR__ . '/sample.phppt');\n</code></pre>"},{"location":"usage/styles.html","title":"Styles","text":""},{"location":"usage/styles.html#fill","title":"Fill","text":"<p>Use this style to define fill of a shape as example below.</p> <pre><code>&lt;?php\n\n$shape-&gt;getFill()\n    -&gt;setFillType(Fill::FILL_GRADIENT_LINEAR)\n    -&gt;setRotation(270)\n    -&gt;setStartColor(new Color('FFCCCCCC'))\n    -&gt;setEndColor(new Color('FFFFFFFF'));\n</code></pre> <p>Properties:</p> <ul> <li><code>fillType</code></li> <li><code>rotation</code></li> <li><code>startColor</code></li> <li><code>endColor</code></li> </ul>"},{"location":"usage/styles.html#border","title":"Border","text":"<p>Use this style to define border of a shape as example below.</p> <pre><code>&lt;?php\n\n    $shape-&gt;getBorder()\n        -&gt;setLineStyle(Border::LINE_SINGLE)\n        -&gt;setLineWidth(4)\n        -&gt;getColor()-&gt;setARGB('FFC00000');\n</code></pre> <p>Properties:</p> <ul> <li><code>lineWidth</code></li> <li><code>lineStyle</code></li> <li><code>dashStyle</code></li> <li><code>color</code></li> </ul>"},{"location":"usage/styles.html#shadow","title":"Shadow","text":"<p>Use this style to define shadow of a shape as example below.</p> <pre><code>&lt;?php\n\n$shape-&gt;getShadow()\n    -&gt;setVisible(true)\n    -&gt;setDirection(45)\n    -&gt;setDistance(10);\n</code></pre> <p>Properties:</p> <ul> <li><code>visible</code></li> <li><code>blurRadius</code></li> <li><code>distance</code></li> <li><code>direction</code></li> <li><code>alignment</code></li> <li><code>color</code></li> <li><code>alpha</code></li> </ul>"},{"location":"usage/styles.html#alignment","title":"Alignment","text":"<ul> <li><code>horizontal</code></li> <li><code>vertical</code></li> <li><code>level</code></li> <li><code>indent</code></li> <li><code>marginLeft</code></li> <li><code>marginRight</code></li> </ul>"},{"location":"usage/styles.html#rtl-ltr","title":"RTL / LTR","text":"<p>You can define if the alignment is RTL or LTR.</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Style\\Alignment;\n\n$alignment = new Alignment();\n\n// Set alignment to RTL\n$alignment-&gt;setIsRTL(true);\n// Set alignment to LTR\n$alignment-&gt;setIsRTL(false);\n// Is the alignment RTL?\necho $alignment-&gt;isRTL();\n</code></pre>"},{"location":"usage/styles.html#font","title":"Font","text":"<ul> <li><code>name</code></li> <li><code>bold</code></li> <li><code>italic</code></li> <li><code>superScript</code> (deprecated)</li> <li><code>subScript</code> (deprecated)</li> <li><code>underline</code></li> <li><code>strikethrough</code></li> <li><code>color</code></li> <li><code>pitchFamily</code></li> <li><code>charset</code></li> </ul>"},{"location":"usage/styles.html#baseline","title":"Baseline","text":"<p>The baseline set the position relative to the line. The value is a percentage.</p> <p>You can use some predefined values :</p> <ul> <li><code>Font::BASELINE_SUPERSCRIPT</code> (= 300000 = 300%)</li> <li><code>Font::BASELINE_SUBSCRIPT</code> (= -250000 = -250%)</li> </ul>"},{"location":"usage/styles.html#capitalization","title":"Capitalization","text":"<p>Some formats are available : </p> <ul> <li><code>Font::CAPITALIZATION_NONE</code></li> <li><code>Font::CAPITALIZATION_ALL</code></li> <li><code>Font::CAPITALIZATION_SMALL</code></li> </ul> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Style\\Font;\n\n$font = new Font();\n\n// Set capitalization of font\n$font-&gt;setCapitalization(Font::CAPITALIZATION_ALL);\n// Get capitalization of font\necho $font-&gt;getCapitalization();\n</code></pre>"},{"location":"usage/styles.html#format","title":"Format","text":"<p>Some formats are available : </p> <ul> <li><code>Font::FORMAT_LATIN</code></li> <li><code>Font::FORMAT_EAST_ASIAN</code></li> <li><code>Font::FORMAT_COMPLEX_SCRIPT</code></li> </ul> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Style\\Font;\n\n$font = new Font();\n\n// Set format of font\n$font-&gt;setFormat(Font::FORMAT_EAST_ASIAN);\n// Get format of font\necho $font-&gt;getFormat();\n</code></pre>"},{"location":"usage/styles.html#panose","title":"Panose","text":"<p>The support of Panose 1.0 is only used.</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Style\\Font;\n\n$font = new Font();\n\n// Set panose of font\n$font-&gt;setPanose('4494D72242');\n// Get panose of font\necho $font-&gt;getPanose();\n</code></pre>"},{"location":"usage/styles.html#bullet","title":"Bullet","text":"<ul> <li><code>bulletType</code></li> <li><code>bulletFont</code></li> <li><code>bulletChar</code></li> <li><code>bulletNumericStyle</code></li> <li><code>bulletNumericStartAt</code></li> </ul>"},{"location":"usage/styles.html#color","title":"Color","text":"<p>Colors can be applied to different objects, e.g. font or border.</p> <pre><code>&lt;?php\n\n$textRun = $shape-&gt;createTextRun('Text');\n$textRun-&gt;getFont()-&gt;setColor(new Color('C00000'));\n</code></pre>"},{"location":"usage/writers.html","title":"Writers","text":""},{"location":"usage/writers.html#odpresentation","title":"ODPresentation","text":"<p>The name of the writer is <code>ODPresentation</code>.</p> <pre><code>&lt;?php\n\n$writer = IOFactory::createWriter($oPhpPresentation, 'PowerPoint2007');\n$writer-&gt;save(__DIR__ . '/sample.pptx');\n</code></pre>"},{"location":"usage/writers.html#powerpoint2007","title":"PowerPoint2007","text":"<p>The name of the writer is <code>PowerPoint2007</code>.</p> <pre><code>&lt;?php\n\n$writer = IOFactory::createWriter($oPhpPresentation, 'PowerPoint2007');\n$writer-&gt;save(__DIR__ . '/sample.pptx');\n</code></pre> <p>You can change the ZIP Adapter for the writer. By default, the ZIP Adapter is <code>ZipArchiveAdapter</code>.</p> <pre><code>&lt;?php\n\nuse PhpOffice\\Common\\Adapter\\Zip\\PclZipAdapter;\nuse PhpOffice\\Common\\Adapter\\Zip\\ZipArchiveAdapter;\n\n$writer = IOFactory::createWriter($oPhpPresentation, 'PowerPoint2007');\n$writer-&gt;setZipAdapter(new PclZipAdapter());\n$writer-&gt;save(__DIR__ . '/sample.pptx');\n</code></pre>"},{"location":"usage/writers.html#serialized","title":"Serialized","text":"<p>The name of the writer is <code>Serialized</code>.</p> <pre><code>&lt;?php\n\n$writer = IOFactory::createWriter($oPhpPresentation, 'Serialized');\n$writer-&gt;save(__DIR__ . '/sample.phppt');\n</code></pre> <p>You can change the ZIP Adapter for the writer. By default, the ZIP Adapter is <code>ZipArchiveAdapter</code>.</p> <pre><code>&lt;?php\n\nuse PhpOffice\\Common\\Adapter\\Zip\\PclZipAdapter;\nuse PhpOffice\\Common\\Adapter\\Zip\\ZipArchiveAdapter;\n\n$writer = IOFactory::createWriter($oPhpPresentation, 'Serialized');\n$writer-&gt;setZipAdapter(new PclZipAdapter());\n$writer-&gt;save(__DIR__ . '/sample.phppt');\n</code></pre>"},{"location":"usage/shapes/autoshape.html","title":"AutoShape","text":"<p>Warning</p> <p>Available only on the PowerPoint2007 Writer</p> <p>To create a geometric form, create an object <code>AutoShape</code> and add it to slide.</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\AutoShape;\n\n$shape = new AutoShape();\n$slide-&gt;addShape($shape)\n</code></pre>"},{"location":"usage/shapes/autoshape.html#text","title":"Text","text":"<p>You can define text of the geometric form with <code>setText</code> method.</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\AutoShape;\n\n$shape = new AutoShape();\n// Define the text\n$shape-&gt;setText('ABC');\n// Return the text\n$shape-&gt;getText();\n</code></pre>"},{"location":"usage/shapes/chart.html","title":"Charts","text":"<p>To create a chart, use <code>createChartShape</code> method of Slide.</p> <pre><code>&lt;?php\n\n$chartShape = $slide-&gt;createChartShape();\n</code></pre>"},{"location":"usage/shapes/chart.html#customization","title":"Customization","text":""},{"location":"usage/shapes/chart.html#manage-how-blank-values-are-displayed","title":"Manage how blank values are displayed","text":"<p>You can define how blank values are displayed with the method <code>setDisplayBlankAs</code>.</p> <p></p> <p>Differents types are available:</p> <ul> <li><code>Chart::BLANKAS_GAP</code> for Leave a gap</li> <li><code>Chart::BLANKAS_ZERO</code> for Assume zero (default)</li> <li><code>Chart::BLANKAS_SPAN</code> for Continue line</li> </ul> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\Chart;\n\n// Set the behavior\n$chart-&gt;setDisplayBlankAs(Chart::BLANKAS_GAP);\n// Get the behavior\necho $chart-&gt;getDisplayBlankAs();\n</code></pre>"},{"location":"usage/shapes/chart.html#parts","title":"Parts","text":""},{"location":"usage/shapes/chart.html#axis","title":"Axis","text":""},{"location":"usage/shapes/chart.html#title","title":"Title","text":"<p>You can define title for each axis (X &amp; Y) with <code>setTitle</code> method. You can apply a rotation with the <code>setTitleRotation</code> method with an expected paremeter in degrees.</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\Chart\\Gridlines;\n\n$line = new Line();\n\n$shape = $slide-&gt;createChartShape();\n$shape-&gt;getPlotArea()-&gt;setType($line);\n\n$shape-&gt;getPlotArea()-&gt;getAxisX()-&gt;setTitle('Axis X');\n$shape-&gt;getPlotArea()-&gt;getAxisX()-&gt;setTitleRotation(45);\n</code></pre>"},{"location":"usage/shapes/chart.html#gridlines","title":"Gridlines","text":"<p>You can define gridlines (minor and major) for each axis (X &amp; Y). For each gridline, you can custom the width (in points), the fill type and the fill color.</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\Chart\\Gridlines;\n\n$line = new Line();\n\n$gridlines = new Gridlines();\n$gridlines-&gt;getOutline()-&gt;setWidth(10);\n$gridlines-&gt;getOutline()-&gt;getFill()-&gt;setFillType(Fill::FILL_SOLID)-&gt;setStartColor(new Color(Color::COLOR_BLUE));\n\n$shape = $slide-&gt;createChartShape();\n$shape-&gt;getPlotArea()-&gt;setType($line);\n$shape-&gt;getPlotArea()-&gt;getAxisX()-&gt;setMajorGridlines($gridlines);\n</code></pre>"},{"location":"usage/shapes/chart.html#bounds-min-max","title":"Bounds (Min &amp; Max)","text":"<p>For Axis, you can define the min &amp; max bounds with <code>setMinBounds</code> &amp; <code>setMaxBounds</code> methods. For resetting them, you pass null as parameter to these methods.</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\Chart\\Gridlines;\n\n$line = new Line();\n\n$shape = $slide-&gt;createChartShape();\n$shape-&gt;getPlotArea()-&gt;setType($line);\n$shape-&gt;getPlotArea()-&gt;getAxisX()-&gt;setMinBounds(0);\n$shape-&gt;getPlotArea()-&gt;getAxisX()-&gt;setMaxBounds(200);\n</code></pre>"},{"location":"usage/shapes/chart.html#crossing","title":"Crossing","text":"<p>Warning</p> <p>Available only on the PowerPoint2007 Writer</p> <p>For Axis, <code>setCrossesAt</code> can be used to define where it should be crossed by the perpendicular/ horizontal axis. The property can be defined by one of the three given constants or as an absolute value on the target axis.</p> <pre><code>use PhpOffice\\PhpPresentation\\Shape\\Axis;\nuse PhpOffice\\PhpPresentation\\Shape\\Chart\\Type\\Bar;\n\n$bar = new Bar();\n\n$shape = $slide-&gt;createChartShape();\n$shape-&gt;getPlotArea()-&gt;setType($bar);\n\n// Usage of constant: Horizontal axis will cross the Y-Axis at `0`\n$shape-&gt;getPlotArea()-&gt;getAxisY()-&gt;setCrossesAt(Axis::CROSSES_AUTO);\n\n// Usage of individual value: Horizontal axis will cross the Y-Axis at `3`\n$shape-&gt;getPlotArea()-&gt;getAxisY()-&gt;setCrossesAt('3');\n</code></pre> Constant Description <code>AXIS::CROSSES_AUTO</code> Axis crosses at zero. <code>AXIS::CROSSES_MIN</code> Axis crosses at minimum. <code>AXIS::CROSSES_MAX</code> Axis crosses at maximum."},{"location":"usage/shapes/chart.html#reversed-order","title":"Reversed Order","text":"<p>You can reverse the order of a categorial or value axis trought <code>setIsReversedOrder</code>.</p> <p>Notice: If you reverse the order of a axis, this automatically changes the position of the other axis. To reset this effect, the axis intersection point on the other axis must be set to <code>Axis::CROSSES_MAX</code> using <code>setCrossesAt</code>.</p> <pre><code>use PhpOffice\\PhpPresentation\\Shape\\Axis;\nuse PhpOffice\\PhpPresentation\\Shape\\Chart\\Type\\Bar;\n\n$bar = new Bar();\n\n$shape = $slide-&gt;createChartShape();\n$shape-&gt;getPlotArea()-&gt;setType($bar);\n\n// default value, will return false\n$shape-&gt;getPlotArea()-&gt;getAxisY()-&gt;isReversedOrder()\n\n// reverse order\n$shape-&gt;getPlotArea()-&gt;getAxisY()-&gt;setIsReversedOrder(true);\n\n// revert the automatic intersection switch on x axis\n$shape-&gt;getPlotArea()-&gt;getAxisX()-&gt;setCrossesAt(Axis::CROSSES_MAX);\n</code></pre>"},{"location":"usage/shapes/chart.html#outline","title":"Outline","text":"<p>You can define outline for each axis (X &amp; Y).</p> <pre><code>&lt;?php\n\n$line = new Line();\n\n$shape = $slide-&gt;createChartShape();\n$shape-&gt;getPlotArea()-&gt;setType($line);\n$shape-&gt;getPlotArea()-&gt;getAxisX()-&gt;getOutline()-&gt;setWidth(10);\n$shape-&gt;getPlotArea()-&gt;getAxisX()-&gt;getOutline()-&gt;getFill()-&gt;setFillType(Fill::FILL_SOLID)-&gt;setStartColor(new Color(Color::COLOR_BLUE));\n</code></pre>"},{"location":"usage/shapes/chart.html#tick-label","title":"Tick Label","text":""},{"location":"usage/shapes/chart.html#position","title":"Position","text":"<p>You can define the tick label position with the <code>setTickLabelPosition</code> method. For resetting it, you pass <code>Axis::TICK_LABEL_POSITION_NEXT_TO</code> as parameter to this method.</p> <p>Differents types are available:</p> <ul> <li><code>Axis::TICK_LABEL_POSITION_HIGH</code>: Labels are at the high end of the perpendicular axis</li> <li><code>Axis::TICK_LABEL_POSITION_LOW</code>: Labels are at the low end of the perpendicular axis</li> <li><code>Axis::TICK_LABEL_POSITION_NEXT_TO</code>: Labels are next to the axis (default)</li> </ul> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\Chart\\Axis;\n\n$line = new Line();\n\n$shape = $slide-&gt;createChartShape();\n$shape-&gt;getPlotArea()-&gt;setType($line);\n$shape-&gt;getPlotArea()-&gt;getAxisY()-&gt;setTickLabelPosition(Axis::TICK_LABEL_POSITION_LOW);\n</code></pre>"},{"location":"usage/shapes/chart.html#font","title":"Font","text":"<p>You can define the tick label font with the <code>setTickLabelFont</code> method. For resetting it, you pass <code>null</code> as parameter to this method.</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\Chart\\Axis;\nuse PhpOffice\\PhpPresentation\\Style\\Color;\nuse PhpOffice\\PhpPresentation\\Style\\Font;\n\n$line = new Line();\n$font = new Font();\n$font-&gt;setColor(new Color('C00000'))\n\n$shape = $slide-&gt;createChartShape();\n$shape-&gt;getPlotArea()-&gt;setType($line);\n$shape-&gt;getPlotArea()-&gt;getAxisY()-&gt;setTickLabelFont($font);\n</code></pre>"},{"location":"usage/shapes/chart.html#tick-marks","title":"Tick Marks","text":"<p>For Axis Y, you can define tick mark with <code>setMinorTickMark</code> &amp; <code>setMajorTickMark</code> methods. For resetting them, you pass <code>Axis::TICK_MARK_NONE</code> as parameter to these methods.</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\Chart\\Axis;\n\n$line = new Line();\n\n$shape = $slide-&gt;createChartShape();\n$shape-&gt;getPlotArea()-&gt;setType($line);\n$shape-&gt;getPlotArea()-&gt;getAxisY()-&gt;setMinorTickMark(Axis::TICK_MARK_NONE);\n$shape-&gt;getPlotArea()-&gt;getAxisY()-&gt;setMajorTickMark(Axis::TICK_MARK_INSIDE);\n</code></pre>"},{"location":"usage/shapes/chart.html#unit","title":"Unit","text":"<p>For Axis Y, you can define unit with <code>setMinorUnit</code> &amp; <code>setMajorUnit</code> methods. For resetting them, you pass null as parameter to these methods.</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\Chart\\Axis;\n\n$line = new Line();\n\n$shape = $slide-&gt;createChartShape();\n$shape-&gt;getPlotArea()-&gt;setType($line);\n$shape-&gt;getPlotArea()-&gt;getAxisY()-&gt;setMinorUnit(null);\n$shape-&gt;getPlotArea()-&gt;getAxisY()-&gt;setMajorUnit(0.05);\n</code></pre>"},{"location":"usage/shapes/chart.html#visibility","title":"Visibility","text":"<p>You can define visibility for each axis (X &amp; Y).</p> <pre><code>&lt;?php\n\n$line = new Line();\n\n$shape = $slide-&gt;createChartShape();\n$shape-&gt;getPlotArea()-&gt;setType($line);\n$shape-&gt;getPlotArea()-&gt;getAxisX()-&gt;setIsVisible(false);\n</code></pre>"},{"location":"usage/shapes/chart.html#title_1","title":"Title","text":"<p>By default, the title of a chart is displayed. For hiding it, you define its visibility to false.</p> <pre><code>&lt;?php\n\n$line = new Line();\n$shape = $slide-&gt;createChartShape();\n$shape-&gt;getPlotArea()-&gt;setType($line);\n// Hide the title\n$shape-&gt;getTitle()-&gt;setVisible(false);\n</code></pre>"},{"location":"usage/shapes/chart.html#series","title":"Series","text":""},{"location":"usage/shapes/chart.html#display-informations","title":"Display Informations","text":"<p>You can define if some informations are displayed.</p> <pre><code>&lt;?php\n\n$series = new Series('Downloads', $seriesData);\n$series-&gt;setSeparator(';');\n$series-&gt;setShowCategoryName(true);\n$series-&gt;setShowLeaderLines(true);\n$series-&gt;setShowLegendKey(true);\n$series-&gt;setShowPercentage(true);\n$series-&gt;setShowSeriesName(true);\n$series-&gt;setShowValue(true);\n</code></pre>"},{"location":"usage/shapes/chart.html#font_1","title":"Font","text":"<p>You can custom the font of a serie.</p> <pre><code>&lt;?php\n\n$series = new Series('Downloads', $seriesData);\n// Define the size\n$series-&gt;getFont()-&gt;setSize(25);\n</code></pre>"},{"location":"usage/shapes/chart.html#label-position","title":"Label Position","text":"<p>You can define the position of the data label. Each position is described in MSDN.</p> <pre><code>&lt;?php\n\n$series = new Series('Downloads', $seriesData);\n$series-&gt;setLabelPosition(Series::LABEL_INSIDEEND);\n</code></pre>"},{"location":"usage/shapes/chart.html#marker","title":"Marker","text":"<p>You can custom the marker of a serie, for Line &amp; Scatter charts.</p>"},{"location":"usage/shapes/chart.html#customize-the-border","title":"Customize the border","text":"<p>Warning</p> <p>Available only on the PowerPoint2007 Writer</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\Chart\\Marker;\nuse PhpOffice\\PhpPresentation\\Style\\Border;\n\n$series = new Series('Downloads', $seriesData);\n$marker = $series-&gt;getMarker();\n$marker-&gt;getBorder()-&gt;setLineStyle(Border::LINE_SINGLE);\n</code></pre>"},{"location":"usage/shapes/chart.html#customize-the-fill","title":"Customize the fill","text":"<p>Warning</p> <p>Available only on the PowerPoint2007 Writer</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\Chart\\Marker;\nuse PhpOffice\\PhpPresentation\\Style\\Fill;\n\n$series = new Series('Downloads', $seriesData);\n$marker = $series-&gt;getMarker();\n$marker-&gt;getFill()-&gt;setFillType(Fill::FILL_SOLID);\n</code></pre>"},{"location":"usage/shapes/chart.html#customize-the-symbol","title":"Customize the symbol","text":"<pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\Chart\\Marker;\n\n$series = new Series('Downloads', $seriesData);\n$marker = $series-&gt;getMarker();\n$marker-&gt;setSymbol(Marker::SYMBOL_DASH)-&gt;setSize(10);\n</code></pre>"},{"location":"usage/shapes/chart.html#outline_1","title":"Outline","text":"<p>You can custom the line of a serie, for Line &amp; Scatter charts.</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Style\\Outline;\n\n$outline = new Outline();\n// Define the color\n$outline-&gt;getFill()-&gt;setFillType(Fill::FILL_SOLID);\n$outline-&gt;getFill()-&gt;setStartColor(new Color(Color::COLOR_YELLOW));\n// Define the width (in points)\n$outline-&gt;setWidth(2);\n\n$series = new Series('Downloads', $seriesData);\n$series-&gt;setOutline($outline);\n</code></pre>"},{"location":"usage/shapes/chart.html#view3d","title":"View3D","text":"<p>For enabling the autoscale for a shape, you must reset the height percent.</p> <pre><code>&lt;?php\n\n$shape-&gt;getView3D()-&gt;setHeightPercent(null);\n</code></pre>"},{"location":"usage/shapes/chart.html#types","title":"Types","text":""},{"location":"usage/shapes/chart.html#area","title":"Area","text":"<p>TODO</p>"},{"location":"usage/shapes/chart.html#bar-bar3d","title":"Bar &amp; Bar3D","text":""},{"location":"usage/shapes/chart.html#gap-width","title":"Gap Width","text":"<p>You can define the gap width between bar or columns clusters. It is relatively defined as percentage of a bars width. The default value is 150%. The value must be defined between 0 and 500.</p> <pre><code>&lt;?php\n\n$barChart = new Bar();\n$barChart-&gt;setGapWidthPercent(250);\n</code></pre>"},{"location":"usage/shapes/chart.html#overlap","title":"Overlap","text":"<p>You can define the bar overlap within bar or column clusters. It is relatively defined as percentage of a bars width. The default value is <code>100%</code> for stacked and <code>0%</code> for grouped bar charts. The value must be defined between <code>-100</code> and <code>100</code>.</p> <p>When setting the bar grouping type, the default overlap values will be set. Any change to the overlap must be made after setting the bar grouping type through <code>setBarGrouping</code>.</p> <pre><code>$barChart = new Bar();\n// will set the overlap to the default value for grouped bars: 0\n$barChart-&gt;setBarGrouping(Bar::GROUPING_CLUSTERED);\n\n// a positive value will result in an overlapping\n$barChart-&gt;setOverlapWidthPercent(25);\n\n// a negative value will result in a gap\n$barChart-&gt;setOverlapWidthPercent(-25);\n</code></pre> <p></p>"},{"location":"usage/shapes/chart.html#stacking","title":"Stacking","text":"<p>You can stack multiples series in a same chart. After adding multiples series, you can define the bar grouping with <code>setBarGrouping</code> method of AbstractTypeBar.</p> <pre><code>&lt;?php\n\n$barChart = new Bar();\n$barChart-&gt;addSeries($series1);\n$barChart-&gt;addSeries($series2);\n$barChart-&gt;addSeries($series3);\n$barChart-&gt;setBarGrouping(Bar::GROUPING_CLUSTERED);\n// OR\n$barChart-&gt;setBarGrouping(Bar::GROUPING_STACKED);\n// OR\n$barChart-&gt;setBarGrouping(Bar::GROUPING_PERCENTSTACKED);\n</code></pre> Type Constant Grouped Bars Bar::GROUPING_CLUSTERED Stacked Bars Bar::GROUPING_STACKED Stacked Bars 100% Bar::GROUPING_PERCENTSTACKED"},{"location":"usage/shapes/chart.html#line","title":"Line","text":""},{"location":"usage/shapes/chart.html#smooth-line","title":"Smooth line","text":"<p>You can enable or disable the smooth line with <code>setIsSmooth</code> method from <code>AbstractTypeLine</code>. By default, smooth line is disabled.</p> <pre><code>&lt;?php\n\n$chart = new Line();\n// Enable the smooth line\n$chart-&gt;setIsSmooth(true);\n// Disable the smooth line\n$chart-&gt;setIsSmooth(false);\n// Get status of smooth line\n$chart-&gt;isSmooth();\n</code></pre>"},{"location":"usage/shapes/chart.html#pie-pie3d","title":"Pie &amp; Pie3D","text":"<p>TODO</p>"},{"location":"usage/shapes/chart.html#radar","title":"Radar","text":"<p>You can create a Radar Chart.</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\Chart\\Type\\Radar;\n\n$radarChart = new Radar();\n\n$shape = $slide-&gt;createChartShape();\n$shape-&gt;getPlotArea()-&gt;setType($radarChart);\n</code></pre>"},{"location":"usage/shapes/chart.html#scatter","title":"Scatter","text":""},{"location":"usage/shapes/chart.html#smooth-line_1","title":"Smooth line","text":"<p>You can enable or disable the smooth line with <code>setIsSmooth</code> method from <code>AbstractTypeLine</code>. By default, smooth line is disabled.</p> <pre><code>&lt;?php\n\n$chart = new Scatter();\n// Enable the smooth line\n$chart-&gt;setIsSmooth(true);\n// Disable the smooth line\n$chart-&gt;setIsSmooth(false);\n// Get status of smooth line\n$chart-&gt;isSmooth();\n</code></pre>"},{"location":"usage/shapes/comment.html","title":"Comments","text":"<p>To create a comment, create an object <code>Comment</code>.</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\Comment;\n\n$comment = new Comment();\n$slide-&gt;addShape($comment);\n</code></pre> <p>You can define text and date with setters.</p> <p>Example:</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\Comment;\n\n$comment = new Comment();\n$comment-&gt;setText('Text of the Comment');\n$comment-&gt;setDate(time());\n$slide-&gt;addShape($comment);\n</code></pre>"},{"location":"usage/shapes/comment.html#author","title":"Author","text":"<p>For a comment, you can define the author.</p> <p>Example:</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\Comment;\nuse PhpOffice\\PhpPresentation\\Shape\\Comment\\Author;\n\n$author = new Author();\n$comment = new Comment();\n$comment-&gt;setAuthor($author);\n$slide-&gt;addShape($comment);\n</code></pre> <p>You can define name and initials with setters.</p> <p>Example:</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\Comment;\nuse PhpOffice\\PhpPresentation\\Shape\\Comment\\Author;\n\n$author = new Author();\n$author-&gt;setName('Name of the author');\n$author-&gt;setInitals('Nota');\n$comment = new Comment();\n$comment-&gt;setAuthor($author);\n$slide-&gt;addShape($comment);\n</code></pre>"},{"location":"usage/shapes/drawing.html","title":"Drawing","text":"<p>To create a drawing, you have multiples sources :</p> <ul> <li>Base64</li> <li>File</li> <li>GD</li> <li>ZipFile</li> </ul> <p>You can add multiples formats of image :</p> <ul> <li>GIF</li> <li>JPEG</li> <li>PNG</li> <li>SVG</li> </ul>"},{"location":"usage/shapes/drawing.html#file","title":"File","text":"<p>To create a drawing, use <code>createDrawingShape</code> method of slide.</p> <pre><code>&lt;?php\n\n$shape = $slide-&gt;createDrawingShape();\n$shape-&gt;setName('Unique name')\n    -&gt;setDescription('Description of the drawing')\n    -&gt;setPath('/path/to/drawing.filename');\n</code></pre> <p>It's an alias for :</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\Drawing\\File;\n\n$shape = new File();\n$shape-&gt;setName('Unique name')\n    -&gt;setDescription('Description of the drawing')\n    -&gt;setPath('/path/to/drawing.filename');\n$slide-&gt;addShape($shape);\n</code></pre>"},{"location":"usage/shapes/drawing.html#base64","title":"Base64","text":"<pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\Drawing\\Base64;\n\n$shape = new Base64();\n$shape-&gt;setName('Sample image')\n    -&gt;setDescription('Sample image')\n    -&gt;setImageResource($gdImage)\n    -&gt;setData('data:image/jpeg;base64,..........');\n$slide-&gt;addShape($shape);\n</code></pre>"},{"location":"usage/shapes/drawing.html#gd","title":"GD","text":"<pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\Drawing\\Gd;\n\n$gdImage = imagecreatetruecolor($width, $height);\n\n$shape = new Gd();\n$shape-&gt;setName('Sample image')\n    -&gt;setDescription('Sample image')\n    -&gt;setImageResource($gdImage)\n    -&gt;setRenderingFunction(Drawing\\Gd::RENDERING_JPEG)\n    -&gt;setMimeType(Drawing\\Gd::MIMETYPE_DEFAULT);\n$slide-&gt;addShape($shape);\n</code></pre>"},{"location":"usage/shapes/drawing.html#zipfile","title":"ZipFile","text":"<pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\Drawing\\ZipFile;\n\n$shape = new ZipFile();\n$shape-&gt;setName('Sample image')\n    -&gt;setDescription('Sample image')\n    -&gt;setPath('zip://myzipfile.zip#path/in/zip/img.ext')\n$slide-&gt;addShape($shape);\n</code></pre>"},{"location":"usage/shapes/introduction.html","title":"Shapes","text":"<p>Shapes are objects that can be added to a slide. There are five types of shapes that can be used, i.e. rich text, line, chart, drawing, and table. Read the corresponding section of this manual for detail information of each shape.</p> <p>Every shapes have common properties that you can set by using fluent interface.</p> <ul> <li><code>width</code> in pixels</li> <li><code>height</code> in pixels</li> <li><code>offsetX</code> in pixels</li> <li><code>offsetY</code> in pixels</li> <li><code>rotation</code> in degrees</li> <li><code>fill</code> see Fill</li> <li><code>border</code> see Border</li> <li><code>shadow</code> see Shadow</li> <li><code>hyperlink</code></li> </ul> <p>Example:</p> <pre><code>&lt;?php\n$richtext = $slide-&gt;createRichTextShape()\n        -&gt;setHeight(300)\n        -&gt;setWidth(600)\n        -&gt;setOffsetX(170)\n        -&gt;setOffsetY(180);\n</code></pre>"},{"location":"usage/shapes/introduction.html#line","title":"Line","text":"<p>To create a line, use <code>createLineShape</code> method of slide.</p>"},{"location":"usage/shapes/media.html","title":"Media","text":"<p>To create a video, create an object <code>Media</code>.</p> <p>Example:</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\Media;\n\n$media = new Media();\n$media-&gt;setPath('file.wmv');\n// $media-&gt;setPath('file.ogv');\n$slide-&gt;addShape($media);\n</code></pre> <p>You can define text and date with setters.</p> <p>Example:</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\Media;\n\n$media = new Media();\n$media-&gt;setName('Name of the Media');\n$slide-&gt;addShape($media);\n</code></pre>"},{"location":"usage/shapes/media.html#quirks","title":"Quirks","text":"<p>For Windows readers, the prefered file format is WMV. For Linux readers, the prefered file format is OGV.</p>"},{"location":"usage/shapes/richtext.html","title":"RichText","text":"<p>Rich text shapes contain paragraphs of texts. To create a rich text shape, use <code>createRichTextShape</code> method of slide.</p> <p>Each rich text can contain multiples paragraphs. Each paragraph can contain: - a <code>TextElement</code> - a <code>BreakElement</code> - a <code>Run</code></p> <p>Below are the properties that you can set for a rich text shape.</p> <ul> <li><code>wrap</code></li> <li><code>autoFit</code></li> <li><code>fontScale</code> : font scale (in percentage) when autoFit = <code>RichText::AUTOFIT_NORMAL</code></li> <li><code>lnSpcReduction</code> : line spacing reduction (in percentage) when autoFit = <code>RichText::AUTOFIT_NORMAL</code></li> <li><code>horizontalOverflow</code></li> <li><code>verticalOverflow</code></li> <li><code>upright</code></li> <li><code>vertical</code></li> <li><code>columns</code></li> <li><code>bottomInset</code> in pixels</li> <li><code>leftInset</code> in pixels</li> <li><code>rightInset</code> in pixels</li> <li><code>topInset</code> in pixels</li> <li><code>autoShrinkHorizontal</code> (boolean)</li> <li><code>autoShrinkVertical</code> (boolean)</li> <li><code>columnSpacing</code> see Column Spacing</li> </ul> <p>Properties that can be set for each paragraphs are as follow.</p> <ul> <li><code>alignment</code> </li> <li><code>bulletStyle</code> see Bullet</li> <li><code>lineSpacing</code> see Line Spacing</li> <li><code>font</code> </li> </ul>"},{"location":"usage/shapes/richtext.html#column-spacing","title":"Column Spacing","text":"<p>For a paragraph, you can define the column spacing.</p> <p>Example:</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\RichText;\n\n$richText = new RichText();\n$richText-&gt;setColumnSpacing(200);\n$columnSpacing = $richText-&gt;getColumnSpacing();\n</code></pre>"},{"location":"usage/shapes/richtext.html#hyperlink","title":"Hyperlink","text":"<p>For a rich text, you can define the hyperlink.</p> <p>Example:</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\RichText;\n\n$richText = new RichText();\n$richText-&gt;getHyperlink()-&gt;setUrl('https://phpoffice.github.io/PHPPresentation/');\n</code></pre>"},{"location":"usage/shapes/richtext.html#use-of-text-color","title":"Use of Text Color","text":"<p>Warning</p> <p>Available only on the PowerPoint2007 Reader/Writer</p> <p>Hyperlinks can be set to use the text color instead of the default theme color.</p> <p>Example:</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\RichText;\n\n$richText = new RichText();\n$richText-&gt;getHyperlink()-&gt;setUrl('https://phpoffice.github.io/PHPPresentation/');\n$richText-&gt;getHyperlink()-&gt;setIsTextColorUsed(true);\n</code></pre>"},{"location":"usage/shapes/richtext.html#paragraph","title":"Paragraph","text":""},{"location":"usage/shapes/richtext.html#bullet","title":"Bullet","text":"<p>For a paragraph, you can define the bullet style.</p> <p>Example:</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\RichText\\Paragraph;\nuse PhpOffice\\PhpPresentation\\Style\\Bullet;\n\n$paragraph = new Paragraph();\n$paragraph-&gt;getBulletStyle();\n</code></pre> <p>With the bullet style, you can define the char, the font, the color and the type.</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\RichText\\Paragraph;\nuse PhpOffice\\PhpPresentation\\Style\\Bullet;\nuse PhpOffice\\PhpPresentation\\Style\\Color;\n\n$paragraph = new Paragraph();\n$paragraph-&gt;getBulletStyle()-&gt;setBulletChar('-');\n$paragraph-&gt;getBulletStyle()-&gt;setBulletType(Bullet::TYPE_BULLET);\n$paragraph-&gt;getBulletStyle()-&gt;setBulletColor(new Color(Color::COLOR_RED));\n</code></pre>"},{"location":"usage/shapes/richtext.html#line-spacing","title":"Line Spacing","text":"<p>For a paragraph, you can define the line spacing. By default, mode is in percent (<code>Paragraph::LINE_SPACING_MODE_PERCENT</code>), but you can use the point mode (<code>Paragraph::LINE_SPACING_MODE_POINT</code>).</p> <p>Example:</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\RichText\\Paragraph;\n\n$paragraph = new Paragraph();\n$paragraph-&gt;setLineSpacing(200);\n$lineSpacing = $paragraph-&gt;getLineSpacing();\n\n$paragraph-&gt;setLineSpacingMode(Paragraph::LINE_SPACING_MODE_POINT);\n$lineSpacingMode = $paragraph-&gt;getLineSpacingMode();\n</code></pre>"},{"location":"usage/shapes/richtext.html#spacing","title":"Spacing","text":"<p>For a paragraph, you can define the spacing before and after the paragraph in point Example:</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\RichText\\Paragraph;\n\n$paragraph = new Paragraph();\n$paragraph-&gt;setSpacingAfter(12);\n$spacingAfter = $paragraph-&gt;getSpacingAfter();\n\n$paragraph-&gt;setSpacingBefore(34);\n$spacingBefore = $paragraph-&gt;getSpacingBefore();\n</code></pre>"},{"location":"usage/shapes/richtext.html#run","title":"Run","text":"<p>For a run, you can define the language.</p> <p>Example:</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\RichText\\Run;\n\n$run = new Run();\n$run-&gt;setLanguage('fr-FR');\n</code></pre>"},{"location":"usage/shapes/table.html","title":"Tables","text":"<p>To create a table, use <code>createTableShape</code> method of slide.</p> <p>Example:</p> <pre><code>&lt;?php\n\n$tableShape = $slide-&gt;createTableShape($columns);\n</code></pre>"},{"location":"usage/shapes/table.html#rows","title":"Rows","text":"<p>A row is a child of a table. For creating a row, use <code>createRow</code> method of a Table shape.</p> <pre><code>&lt;?php\n\n$tableShape = $slide-&gt;createTableShape($columns);\n$row = $tableShape-&gt;createRow();\n</code></pre>"},{"location":"usage/shapes/table.html#cells","title":"Cells","text":"<p>A cell is a child of a row.</p> <p>You can access cell objects with <code>nextCell</code> method of a Row object.</p> <pre><code>&lt;?php\n\n$tableShape = $slide-&gt;createTableShape($columns);\n$row = $tableShape-&gt;createRow();\n// Get the first cell\n$cellA1 = $row-&gt;nextCell();\n// Get the second cell\n$cellA2 = $row-&gt;nextCell();\n</code></pre> <p>You can access cell object directly.</p> <pre><code>&lt;?php\n\n$tableShape = $slide-&gt;createTableShape($columns);\n$row = $tableShape-&gt;createRow();\n// Get the first cell\n$cellA1 = $row-&gt;getCell(0);\n// Get the second cell\n$cellA2 = $row-&gt;getCell(1);\n</code></pre>"},{"location":"usage/shapes/table.html#define-margins","title":"Define margins","text":"<p>Margins of cells are defined by margins of the first paragraph of cell. Margins of cells are defined in pixels.</p> <p>For defining margins of cell, you can use the <code>setMargin*</code> method of a Alignment object of the active paragraph of a Cell object.</p> <pre><code>&lt;?php\n\n$tableShape = $slide-&gt;createTableShape($columns);\n$row = $tableShape-&gt;createRow();\n$cellA1 = $row-&gt;nextCell();\n$cellA1-&gt;getActiveParagraph()-&gt;getAlignment()\n    -&gt;setMarginBottom(20)\n    -&gt;setMarginLeft(40)\n    -&gt;setMarginRight(60)\n    -&gt;setMarginTop(80);\n</code></pre>"},{"location":"usage/shapes/table.html#define-the-text-direction","title":"Define the text direction","text":"<p>For defining the text direction of cell, you can use the <code>setTextDirection</code> method of the <code>getAlignment</code> method of a Cell object. The width is in pixels.</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Style\\Alignment;\n\n$tableShape = $slide-&gt;createTableShape($columns);\n$row = $tableShape-&gt;createRow();\n$cellA1 = $row-&gt;nextCell();\n$cellA1-&gt;getAlignment()-&gt;setTextDirection(Alignment::TEXT_DIRECTION_VERTICAL_270);\n</code></pre>"},{"location":"usage/shapes/table.html#define-the-width","title":"Define the width","text":"<p>The width of cells are defined by the width of cell of the first row. If not defined, all cells widths are calculated from the width of the shape and the number of columns.</p> <p>For defining the width of cell, you can use the <code>setWidth</code> method of a Cell object. The width is in pixels.</p> <pre><code>&lt;?php\n\n$tableShape = $slide-&gt;createTableShape($columns);\n$row = $tableShape-&gt;createRow();\n$cellA1 = $row-&gt;nextCell();\n$cellA1-&gt;setWidth(100);\n</code></pre>"},{"location":"usage/slides/animation.html","title":"Animations","text":"<p>You can create multiples animations in a slide.</p> <pre><code>&lt;?php\nuse PhpOffice\\PhpPresentation\\Slide\\Animation;\n\n$animation1 = new Animation();\n$animation1-&gt;addShape($drawing);\n$slide-&gt;addAnimation($animation1);\n\n$animation2 = new Animation();\n$animation2-&gt;addShape($richtext);\n$slide-&gt;addAnimation($animation2);\n</code></pre>"},{"location":"usage/slides/introduction.html","title":"Introduction","text":"<p>Slides are pages in a presentation. Slides are stored as a zero based array in <code>PHPPresentation</code> object. Use the method <code>createSlide</code> to create a new slide and retrieve the slide for other operation such as creating shapes for that slide.</p>"},{"location":"usage/slides/introduction.html#name","title":"Name","text":"<p>By default, a slide has not a name. You can define it with the method <code>setName</code>.</p> <pre><code>&lt;?php\n\n$slide = $presentation-&gt;createSlide();\n$slide-&gt;setName('Title of the slide');\n</code></pre>"},{"location":"usage/slides/introduction.html#visibility","title":"Visibility","text":"<p>By default, a slide is visible. You can define it with the method <code>setIsVisible</code>.</p> <pre><code>&lt;?php\n\n$slide = $presentation-&gt;createSlide();\n$slide-&gt;setIsVisible(false);\nvar_dump($slide-&gt;isVisible());\n</code></pre>"},{"location":"usage/slides/layout.html","title":"Slides Layout","text":"<p>A slide is a hierarchy of three components:</p> <ul> <li>The master slide upon which the slide is based : it specifies such properties as the font styles for the title, body, and footer, placeholder positions for text and objects, bullets styles, and background;</li> <li>The slide layout which is applied to the the slide : it permits to override what is specified in the master slide;</li> <li>The slide itself: it contains content and formatting that is not already specified by the master slide and the slide layout.</li> </ul> <p>Placeholders permit to link these three components together in order that the override is possible.</p>"},{"location":"usage/slides/layout.html#master-slides","title":"Master slides","text":"<p>You can access to all master slides with the method <code>getAllMasterSlides</code> or create one with <code>createMasterSlide</code>.</p> <pre><code>&lt;?php\n\n$arraySlideMasters = $presentation-&gt;getAllMasterSlides();\n$masterSlide = $presentation-&gt;createMasterSlide();\n</code></pre>"},{"location":"usage/slides/layout.html#slides-layout_1","title":"Slides Layout","text":"<p>You can access to all slide layout from a master with the method <code>getAllSlideLayouts</code> or create one with <code>createSlideLayout</code>.</p> <pre><code>&lt;?php\n\n$arraySlideLayouts = $masterSlide-&gt;getAllSlideLayouts();\n$slideLayout = $masterSlide-&gt;createSlideLayout();\n</code></pre>"},{"location":"usage/slides/layout.html#placeholders","title":"Placeholders","text":"<p>For each master slide or slide layout, you can add any shape like on a slide.</p> <pre><code>&lt;?php\n\n$shape = $masterSlide-&gt;createChartShape();\n$shape = $slideLayout-&gt;createTableShape();\n</code></pre> <p>You can define a shape as a placeholder for each level with the method <code>setPlaceHolder</code>. A shape defined in each level will have an override for its formatting in each level.</p> <pre><code>&lt;?php\n\nuse PhpOffice\\PhpPresentation\\Shape\\Placeholder;\n$shape-&gt;setPlaceHolder(new Placeholder(Placeholder::PH_TYPE_TITLE));\n</code></pre>"}]}